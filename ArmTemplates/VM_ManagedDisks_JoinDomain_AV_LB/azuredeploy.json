{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "numberOfInstances": {
      "type": "int",
      "maxValue": 5,
      "metadata": {
        "description": "# of VM"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3_v2_Promo",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2_Promo",
        "Standard_DS11_v2_Promo",
        "Standard_DS12_v2_Promo",
        "Standard_DS13_v2_Promo",
        "Standard_DS14_v2_Promo",
        "Standard_D2_v2_Promo",
        "Standard_D3_v2_Promo",
        "Standard_D4_v2_Promo",
        "Standard_D5_v2_Promo",
        "Standard_D11_v2_Promo",
        "Standard_D12_v2_Promo",
        "Standard_D13_v2_Promo",
        "Standard_D14_v2_Promo",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4"
      ],
      "metadata": {
        "description": "Size of VM"
      }
    },

    "imageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2012-R2-Datacenter-smalldisk",
        "2016-Datacenter",
        "2016-Datacenter-Server-Core",
        "2016-Datacenter-Server-Core-smalldisk",
        "2016-Datacenter-smalldisk",
        "2016-Datacenter-with-Containers",
        "2016-Nano-Server"

      ],
      "metadata": {
        "description": "image SKU is the OS wanted"
      }
    },

    "virtualMachineName": {
      "type": "string",
      "metadata": {
        "description": "Name of VM"
      }
    },

    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "allowedValues": [
        "WindowsServer"
      ],
      "metadata": {
        "description": "Image offer name"
      }
    },

    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "allowedValues": [
        "MicrosoftWindowsServer"
      ],
      "metadata": {
        "description": "Image Publisher's name"
      }
    },
    "sizeOfEachDataDiskInGB": {
      "type": "string",
      "metadata": {
        "description": "Size of each data disk in GB"
      }
    },


    "domainToJoin": {
      "type": "string"
    },

    "domainJoinOptions": {
      "type": "int"
    },

    "domainusername": {
      "type": "string"
    },

    "ouPath": {
      "type": "string"
    },

    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the domain join."
      }
    },
    "existingVNETName": {
      "type": "string",
      "metadata": {
        "description": "Existing VNET that contains the domain controller"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet that contains the domain controller"
      }
    },

    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet that contains the domain controller"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "minLength": 1
    },

    "loadBalancerSessionPersistance": {
      "type": "string",
      "allowedValues": [
        "SourceIP",
        "Default",
        "SourceIPProtocol"
      ],
      "defaultValue": "Default"
    },

    "loadBalancerRuleName": {
      "type": "string",
      "defaultValue": "lbrule"
    },

    "LoadBalancerbackendAddressPoolName": {
      "type": "string",
      "defaultValue": "backendAddressPool"
    },

    "LoadBalancerFrontendName": {
      "type": "string",
      "defaultValue": "LoadBalancerFrontend"

    },

    "LoadBalancerProbeName": {
      "type": "string",
      "defaultValue": "lbprobe"
    },

    "loadBalancerName": {
      "type": "string",
      "minLength": 1
    }
  },
  "variables": {
    "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVNETName'))]",
    "imageVersion": "latest",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]"

  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('virtualMachineName'),copyindex(1))]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
        
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetId')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/', parameters('LoadBalancerbackendAddressPoolName'))]"
                }
              ]


            }
          }
        ]
      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "tags": {
        "displayName":  "LoadBalancer"
      },
        "location": "[resourceGroup().location]",
        "dependsOn": [

        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "properties": {
                "subnet": {
                  "id": "[variables('subnetId')]"
                },
                "privateIPAllocationMethod": "Dynamic"
              },
              "name": "[parameters('LoadBalancerFrontendName')]"
            }
          ],
          "backendAddressPools": [
            {
              "name": "[parameters('LoadBalancerbackendAddressPoolName')]"
            }
          ],
          "loadBalancingRules": [
            {
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/', parameters('LoadBalancerFrontendName'))]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', parameters('LoadBalancerbackendAddressPoolName'))]"
                },
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', parameters('LoadBalancerProbeName'))]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "idleTimeoutInMinutes": 15,
                "loadDistribution": "[parameters('loadBalancerSessionPersistance')]"
              },
              "name": "[parameters('loadBalancerRuleName')]"
            }
          ],
          "probes": [
            {
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 15,
                "numberOfProbes": 2
              },
              "name": "[parameters('LoadBalancerProbeName')]"
            }
          ]
        }
      },

    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('virtualMachineName'),copyIndex(1))]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "nicLoop",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"

      ],
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },


        "osProfile": {
          "computerName": "[concat(parameters('virtualMachineName'),copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "createOption": "FromImage",
            "Name": "[concat(parameters('virtualMachineName'),copyIndex(1),'-osdisk')]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }


          },


          "dataDisks": [
            {
              "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
              "lun": 0,
              "createOption": "Empty",
              "Name": "[concat(parameters('virtualMachineName'),copyIndex(1),'-datadisk1')]",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }


            }
          ]
        },



        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('virtualMachineName'), copyindex(1)))]"
            }
          ]
        }
      }
    },


    {
      "apiVersion": "2016-04-30-preview",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),copyIndex(1),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "domainjoin"
      },
      "copy": {
        "name": "domainjoin",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'),copyIndex(1))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('domainToJoin')]",
          "OUPath": "[parameters('ouPath')]",
          "User": "[parameters('domainUsername')]",
          "Restart": "true",
          "Options": "[parameters('domainJoinOptions')]"
        },
        "protectedSettings": {
          "Password": "[parameters('domainPassword')]"
        }
      }
    },
    {
      "name": "[parameters('availabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-04-30-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "AvSet"
      },
      "properties": {
        "platformUpdateDomainCount": 2,
        "platformFaultDomainCount": 2,
        "managed": true
      }
    }



  ]
}
